+ echo 0,1,2,3
+ echo
+ echo
+ echo
+ cd /share/gpu0/jjwhit/rcGAN
+ srun python -u train.py --mass_mapping_4 --exp-name mmgan_training_4 --num-gpus 4
/share/gpu0/jjwhit/rcGAN/fastmri/__init__.py:16: UserWarning: Could not retrieve fastmri version!
  warnings.warn("Could not retrieve fastmri version!")
[rank: 0] Global seed set to 0
wandb: Currently logged in as: jess-j-whitney. Use `wandb login --relogin` to force relogin
wandb: WARNING Path /share/gpu0/jjwhit/mass_map/mm_models/wandb/wandb/ wasn't writable, using system temp directory.
wandb: WARNING Path /share/gpu0/jjwhit/mass_map/mm_models/wandb/wandb/ wasn't writable, using system temp directory
wandb: Tracking run with wandb version 0.15.4
wandb: Run data is saved locally in /tmp/wandb/run-20230702_141329-9309mvin
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run mmgan_training_4
wandb: ‚≠êÔ∏è View project at https://wandb.ai/jess-j-whitney/mass_mapping_project
wandb: üöÄ View run at https://wandb.ai/jess-j-whitney/mass_mapping_project/runs/9309mvin
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
[rank: 0] Global seed set to 0
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/1
[W socket.cpp:426] [c10d] The server socket cannot be initialized on [::]:21694 (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to [compute-gpu-0-2.local]:21694 (errno: 97 - Address family not supported by protocol).
[W socket.cpp:601] [c10d] The client socket cannot be initialized to connect to [compute-gpu-0-2.local]:21694 (errno: 97 - Address family not supported by protocol).
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 1 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]

  | Name          | Type               | Params
-----------------------------------------------------
0 | generator     | UNetModel          | 195 M 
1 | discriminator | DiscriminatorModel | 11.0 M
-----------------------------------------------------
206 M     Trainable params
0         Non-trainable params
206 M     Total params
827.392   Total estimated model params size (MB)
SLURM auto-requeueing enabled. Setting signal handlers.
Traceback (most recent call last):
  File "train.py", line 108, in <module>
    trainer.fit(model, dm)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 608, in fit
    call._call_and_handle_interrupt(
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1103, in _run
    results = self._run_stage()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1182, in _run_stage
    self._run_train()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1205, in _run_train
    self.fit_loop.run()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/fit_loop.py", line 267, in advance
    self._outputs = self.epoch_loop.run(self._data_fetcher)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/epoch/training_epoch_loop.py", line 213, in advance
    batch_output = self.batch_loop.run(kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/batch/training_batch_loop.py", line 88, in advance
    outputs = self.optimizer_loop.run(optimizers, kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 202, in advance
    result = self._run_optimization(kwargs, self._optimizers[self.optim_progress.optimizer_position])
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 249, in _run_optimization
    self._optimizer_step(optimizer, opt_idx, kwargs.get("batch_idx", 0), closure)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 370, in _optimizer_step
    self.trainer._call_lightning_module_hook(
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1347, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/core/module.py", line 1744, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/core/optimizer.py", line 169, in step
    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/strategies/ddp.py", line 280, in optimizer_step
    optimizer_output = super().optimizer_step(optimizer, opt_idx, closure, model, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/strategies/strategy.py", line 234, in optimizer_step
    return self.precision_plugin.optimizer_step(
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 119, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/optim/optimizer.py", line 23, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/optim/adam.py", line 183, in step
    loss = closure()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 105, in _wrap_closure
    closure_result = closure()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 149, in __call__
    self._result = self.closure(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 135, in closure
    step_output = self._step_fn()
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 419, in _training_step
    training_step_output = self.trainer._call_strategy_hook("training_step", *kwargs.values())
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 1485, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/strategies/ddp.py", line 351, in training_step
    return self.model(*args, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/pytorch_lightning/overrides/base.py", line 98, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "/share/gpu0/jjwhit/rcGAN/models/lightning/mmGAN.py", line 151, in training_step
    gens[:, z, :, :, :] = self.forward(y)
  File "/share/gpu0/jjwhit/rcGAN/models/lightning/mmGAN.py", line 102, in forward
    samples = self.generator(torch.cat([y, noise], dim=1))
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/share/gpu0/jjwhit/rcGAN/models/archs/mass_map/generator.py", line 188, in forward
    output = layer(output, stack.pop())
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/share/gpu0/jjwhit/rcGAN/models/archs/mass_map/generator.py", line 108, in forward
    return self.layers(concat_tensor)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/share/gpu0/jjwhit/rcGAN/models/archs/mass_map/generator.py", line 28, in forward
    return self.conv_1x1(x) + self.conv_block(x)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jjwhit/.conda/envs/cGAN/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 1240, in forward
    return F.prelu(input, self.weight)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.00 GiB (GPU 0; 79.10 GiB total capacity; 71.64 GiB already allocated; 414.88 MiB free; 73.84 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: üöÄ View run mmgan_training_4 at: https://wandb.ai/jess-j-whitney/mass_mapping_project/runs/9309mvin
wandb: Synced 6 W&B file(s), 3 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: /tmp/wandb/run-20230702_141329-9309mvin/logs
srun: error: compute-gpu-0-2: task 0: Exited with exit code 1
